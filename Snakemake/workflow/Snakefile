" " "
RNASeq workflow with FASTQ files as input and a count table as output
Nghi Nguyen
" " "
BASE_DIR ="/fs/ess/PAS1855/users/nghinguyen/FinalProject/"
BBDUK=BASE_DIR  + "softwares/bbmap/bbduk.sh"
REF_FA = BASE_DIR + "Snakemake/refgenome/Gmax_275_v2.0.fa"
REF_GFF = BASE_DIR + "Snakemake/refgenome/Gmax_275_Wm82.a2.v1.gene.gff3"
SAMPLES, = glob_wildcards(BASE_DIR + "Snakemake/data/{SRR}_1.fastq")

READS=["1", "2"]

rule all: 
    input:
        "res/count_table.txt",
         expand("res/{SRR}_{read}.fastqc.html", SRR=SAMPLES, read=READS)
         
rule fastqc:
    input:
        "data/{SRR}.fastq",
    output:
        "res/{SRR}_fastqc.html",

    shell:
        "{BASE_DIR}/scripts/fastqc_run.sh {input} {output_dir} &> {log}. "


rule bbduk adapter trimming:
    input:
        adapters=BASE_DIR + "refgenome/adapters.fa",
        R1= BASE_DIR + "data/{SRR}_1.fastq", R2= BASE_DIR + "data/{SRR}_2.fastq"

    output:
        R1= BASE_DIR + "res/{SRR}_adtrimmed_1.fastq", R2= BASE_DIR + "res/{SRR}_adtrimmed_2.fastq"
   
    shell:
        "{BASE_DIR}/scripts/adapter_trimming.sh -r {input.adapters} {input} > {output}"


rule bbduk quality trimming:
    input:
        R1= BASE_DIR + "res/{SRR}_adtrimmed_1.fastq", R2= BASE_DIR + "res/{SRR}_adtrimmed_2.fastq"

    output:
        R1= BASE_DIR + "res/{SRR}_qttrimmed_1.fastq", R2= BASE_DIR + "res/{SRR}_qttrimmed_2.fastq"
   
    shell:
        "{BASE_DIR}/scripts/quality_trimming.sh {input} > {output}"

rule fastqc assessment:
     input:
        "quality_trimmed/{SRR}.fastq",
    output:
        "res/{SRR}_asfastqc.html",

    shell:
        "{BASE_DIR}/scripts/fastqc_run.sh {input} {output_dir} &> {log}."



rule STAR index:
    input:
    fa=REF_FA,
    gff=REF_GFF
     
    output:
    output= BASE_DIR+("STARindex")
threads: 20
shell:
       "{BASE_DIR}/scripts/starindex_submit.sh {input} > {output}"

rule STAR map:
    """
    Map the trimmed FASTQ files to a reference genome.
    """
    input:
        R1=res/{SRR}_qttrimmed_1.fastq,
        R2=res/{SRR}_qttrimmed_2.fastq

    output:
        "res/{SRR}.bam",

  shell:
       "{BASE_DIR}/scripts/star_submit.sh {input} > {output}"


rule feature count:
    """
    From the BAM files, create a gene count table.
    """
    input:
        expand("res/{SRR}.bam", SRR=SAMPLES),
    output:
        "res/count_table.txt",

    shell:
    "{BASE_DIR}/scripts/feature_count.sh {input} > {output}"  

